package com.listify.backend.model;

import jakarta.persistence.*;
import java.time.LocalDate;
import java.util.List;

/**
 * Represents a payment or an expense made by one user and shared with others.
 * This entity is central to cost tracking. It stores the total amount, the date,
 * the paying user ({@code paidBy}), and most importantly, a list of {@link PaymentSharedWith} entries
 * The cascade options ({@code cascade = CascadeType.ALL, orphanRemoval = true}) ensure data consistency
 * by automatically managing dependent {@code PaymentSharedWith} entries.
 *
 * @author Listify Team
 * @version 1.0
 * @see PaymentSharedWith
 * @see User
 */
@Entity
public class Payment {

    /**
     * The unique identifier for the payment.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The title or description of the payment (e.g., "Grocery Shopping", "Dinner").
     */
    private String title;

    /**
     * The total amount of the payment.
     */
    private Double amount;

    /**
     * The date the payment was made.
     */
    private LocalDate date;


    /**
     * The user who made the payment.
     */
    @ManyToOne
    @JoinColumn(name = "paid_by_id")
    private User paidBy;

    /**
     * A list of entries defining which other users this payment is shared with.
     * {@code cascade = CascadeType.ALL}: Operations (persist, remove) on this payment are propagated to the entries.
     * {@code orphanRemoval = true}: If an entry is removed from this list, it is also deleted from the database.
     * @see PaymentSharedWith
     */
    @OneToMany(mappedBy = "payment", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<PaymentSharedWith> sharedWithEntries;

    /**
     * An optional URL to an image of the receipt for this payment.
     */
    private String imageUrl;

    /**
     * Default no-argument constructor. Required by JPA for entity instantiation.
     */
    public Payment() {}

    // Getter & Setter

    /**
     * Gets the ID of the payment.
     * @return the ID.
     */
    public Long getId() { return id; }

    /**
     * Sets the ID of the payment.
     * @param id the new ID.
     */
    public void setId(Long id) { this.id = id; }

    /**
     * Gets the title of the payment.
     * @return the title.
     */
    public String getTitle() { return title; }

    /**
     * Sets the title of the payment.
     * @param title the new title.
     */
    public void setTitle(String title) { this.title = title; }

    /**
     * Gets the amount of the payment.
     * @return the amount.
     */
    public Double getAmount() { return amount; }

    /**
     * Sets the amount of the payment.
     * @param amount the new amount.
     */
    public void setAmount(Double amount) { this.amount = amount; }

    /**
     * Gets the date of the payment.
     * @return the date.
     */
    public LocalDate getDate() { return date; }

    /**
     * Sets the date of the payment.
     * @param date the new date.
     */
    public void setDate(LocalDate date) { this.date = date; }

    /**
     * Gets the user who paid.
     * @return the paying user.
     */

    public User getPaidBy() { return paidBy; }

    /**
     * Sets the user who paid.
     * @param paidBy the new paying user.
     */
    public void setPaidBy(User paidBy) { this.paidBy = paidBy; }

    /**
     * Gets the list of shared-with entries.
     * @return the list of {@link PaymentSharedWith} entries.
     */
    public List<PaymentSharedWith> getSharedWithEntries() { return sharedWithEntries; }

    /**
     * Sets the list of shared-with entries.
     * @param sharedWithEntries the new list of entries.
     */
    public void setSharedWithEntries(List<PaymentSharedWith> sharedWithEntries) { this.sharedWithEntries = sharedWithEntries; }

    /**
     * Gets the URL of the receipt image.
     * @return the image URL or {@code null}.
     */
    public String getImageUrl() { return imageUrl; }

    /**
     * Sets the URL of the receipt image.
     * @param imageUrl the new image URL.
     */
    public void setImageUrl(String imageUrl) { this.imageUrl = imageUrl; }
}
